# .github/workflows/crossbuild-release.yml
# Имя рабочего процесса (отображается в GitHub Actions)
name: Build Cross-Platform Release (Current Version)

# Триггер: запускать при публикации нового релиза
on:
  release:
    types: [published] # Запускается только когда релиз опубликован (не черновик)

# Разрешения, необходимые для загрузки артефактов в релиз
permissions:
  contents: write

# Задачи (jobs), которые будут выполняться
jobs:
  # ----------------------- Задача для сборки под Windows -----------------------
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    # ЗАПУСКАТЬ ТОЛЬКО ЕСЛИ ТЕГ РЕЛИЗА НЕ 'v1.0'
    if: github.event.release.tag_name != 'v1.0'

    defaults:
      run:
        working-directory: ./cur version # Работаем внутри папки cur version

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' # Убедись, что версия подходит

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed --icon="winapp_lilacbook.ico" --add-data "window_bnwbook.png;." --name RGO_lib_parser ru_geo_lib_parser_by_b0s.py

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./cur version/dist/RGO_lib_parser.exe # Путь включает cur version
          asset_name: RGO_lib_parser_win64.exe # Имя для текущих версий
          asset_content_type: application/vnd.microsoft.portable-executable

  # ----------------------- Задача для сборки под macOS -----------------------
  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    # ЗАПУСКАТЬ ТОЛЬКО ЕСЛИ ТЕГ РЕЛИЗА НЕ 'v1.0'
    if: github.event.release.tag_name != 'v1.0'

    defaults:
      run:
        working-directory: ./cur version # Работаем внутри папки cur version

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --windowed --icon="macapp_lilacbook.icns" --add-data "window_bnwbook.png:." --name "RGO Lib Parser" ru_geo_lib_parser_by_b0s.py

      - name: Create Zip Archive of .app
        run: zip -r ./dist/RGO_lib_parser.zip ./dist/"RGO Lib Parser.app"

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./cur version/dist/RGO_lib_parser.zip # Путь включает cur version
          asset_name: RGO_lib_parser_macOS.zip # Имя для текущих версий
          asset_content_type: application/zip

  # ----------------------- Задача для сборки под Linux (Ubuntu) -----------------------
  build-linux:
    name: Build for Linux (Ubuntu)
    runs-on: ubuntu-latest
    # ЗАПУСКАТЬ ТОЛЬКО ЕСЛИ ТЕГ РЕЛИЗА НЕ 'v1.0'
    if: github.event.release.tag_name != 'v1.0'

    defaults:
      run:
        working-directory: ./cur version # Работаем внутри папки cur version

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Tkinter (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk
        working-directory: . # Выполняем в корне

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --onefile --noconsole --add-data "window_bnwbook.png:." --name RGO_lib_parser ru_geo_lib_parser_by_b0s.py

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./cur version/dist/RGO_lib_parser # Путь включает cur version
          asset_name: RGO_lib_parser_ubuntu # Имя для текущих версий
          asset_content_type: application/octet-stream